{\rtf1\ansi\ansicpg932\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset128 HiraKakuProN-W3;}
{\colortbl;\red255\green255\blue255;\red230\green230\blue230;}
\paperw11900\paperh16840\margl1440\margr1440\vieww18300\viewh12880\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs44 \cf0 Unity\'82\'c5zip\'82\'f0\'8e\'67\'82\'c1\'82\'c4\'88\'b3\'8f\'6b\'83\'66\'81\'5b\'83\'5e\'82\'f0\'8d\'ec\'82\'e9
\fs24 \
\
\'8a\'54\'97\'76\

\b0 	SharpZipLib\'82\'f0\'8e\'67\'82\'c1\'82\'c4\'81\'41Unity\'93\'e0\'82\'c5\'83\'66\'81\'5b\'83\'5e\'82\'f0\'88\'b3\'8f\'6b\'82\'b7\'82\'e9\'81\'42\
\
	\'89\'ba\'8b\'4c\'83\'89\'83\'43\'83\'75\'83\'89\'83\'8a\'82\'aa\'97\'4c\'97\'70\'81\'42\
	{\field{\*\fldinst{HYPERLINK "https://github.com/icsharpcode/SharpZipLib"}}{\fldrslt https://github.com/icsharpcode/SharpZipLib}}\
\
\

\b \'97\'70\'93\'72
\b0 \
	\'8f\'91\'82\'ab\'97\'ad\'82\'df\'82\'bd\'83\'8d\'83\'4f\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'f0\'88\'b3\'8f\'6b\'82\'b5\'82\'c4\'91\'97\'82\'e8\'82\'bd\'82\'ad\'82\'c8\'82\'c1\'82\'bd\'82\'e6\'81\'49\'81\'49\
	\'82\'c6\'82\'a2\'82\'a4\'88\'d9\'92\'5b\'82\'c8\'97\'70\'93\'72\'82\'f0\'96\'9e\'82\'bd\'82\'b5\'82\'bd\'82\'a2\'97\'7e\'8b\'81\'82\'a9\'82\'e7\'83\'58\'83\'5e\'81\'5b\'83\'67\'81\'42\
\
\

\b \'8e\'e8\'92\'69
\b0 \
	\'83\'8d\'81\'5b\'83\'4a\'83\'8b\'82\'c5\'83\'74\'83\'40\'83\'43\'83\'8b\'82\'c9\'93\'66\'82\'ab\'8f\'6f\'82\'b7\'95\'4b\'97\'76\'82\'cd\'96\'b3\'82\'a2\'82\'cc\'82\'c5\'81\'41\
	path -> byte []\
	byte [] -> byte []\
	\'82\'c8\'82\'e0\'82\'cc\'82\'f0\'83\'54\'83\'4e\'83\'62\'82\'c6\'97\'70\'88\'d3\'82\'b5\'82\'c4\'82\'dd\'82\'e9\'81\'42\
\
\

\b \'83\'52\'81\'5b\'83\'68
\b0 \
	\'83\'72\'83\'8b\'83\'68\'82\'b7\'82\'e9\'82\'c6\'89\'ba\'8b\'4clib\'82\'aa\'82\'c5\'82\'ab\'82\'e9\'82\'cc\'82\'c5\'81\'41\
		ICSharpCode.SharpZipLib.dll\
\
	\'82\'b1\'82\'ea\'82\'c6\'89\'ba\'8b\'4c\'83\'52\'81\'5b\'83\'68\'82\'c5\'81\'42\
\
\cb2 	/**\
		compress data from path\
	*/\
	public static byte [] ZipFromFile(string filePath) \{\
		using (var fileStreamIn = new FileStream(filePath, FileMode.Open, FileAccess.Read)) \{\
			using (var memoryStreamOut = new MemoryStream()) \{\
				using (ZipOutputStream zipOutStream = new ZipOutputStream(memoryStreamOut)) \{\
					byte[] buffer = new byte[4096];\
\
					// get zipped-file name from filePath.\
					var name = Path.GetFileName(filePath);\
\
					ZipEntry entry = new ZipEntry(name);\
					entry.DateTime = DateTime.Now;\
					zipOutStream.PutNextEntry(entry);\
\
					int size;\
					do \{\
						size = fileStreamIn.Read(buffer, 0, buffer.Length);\
						zipOutStream.Write(buffer, 0, size);\
					\} while (size > 0);\
\
					zipOutStream.Finish();\
\
					zipOutStream.Close();\
				\}\
				return memoryStreamOut.ToArray();\
			\}\
		\}\
	\}\
\
	/**\
		compress data from bytes\
	*/\
	public static byte [] ZipFromBytes(byte [] data, string asName="DEFAULT_NAME") \{\
\
		using (var memoryStreamIn = new MemoryStream(data)) \{\
\
			using (var memoryStreamOut = new MemoryStream()) \{\
\
\
				using (ZipOutputStream zipOutStream = new ZipOutputStream(memoryStreamOut)) \{\
					byte[] buffer = new byte[4096];\
\
					ZipEntry entry = new ZipEntry(asName);\
					entry.DateTime = DateTime.Now;\
					zipOutStream.PutNextEntry(entry);\
\
					int size;\
					do \{\
						size = memoryStreamIn.Read(buffer, 0, buffer.Length);\
						zipOutStream.Write(buffer, 0, size);\
					\} while (size > 0);\
\
					zipOutStream.Finish();\
\
					zipOutStream.Close();\
				\}\
				return memoryStreamOut.ToArray();\
			\}\
		\}\
	\}\
\cb1 \
	\'93\'e0\'97\'65\'82\'cd\'93\'4b\'93\'96\'82\'c8\'82\'cc\'82\'c5\'81\'41\'83\'75\'83\'89\'83\'62\'83\'56\'83\'85\'83\'41\'83\'62\'83\'76\'82\'c6\'82\'a9\'82\'b5\'82\'bd\'82\'a2\'81\'42\
	\'82\'c6\'82\'e0\'82\'a0\'82\'ea\
	path -> zipped byte []\
	byte [] -> zipped byte []\
	\'82\'aa\'8f\'6f\'97\'88\'82\'e9\'8a\'b4\'82\'b6\'81\'42\
\
\

\b \'83\'41\'83\'43\'83\'68\'83\'8b\'8e\'a9\'97\'52\'93\'fc\'97\'cd\'8d\'73
\b0 \
dfgfg\'82\'c1hj\'82\'abzdgfdfgvbh\'82\'b6\'82\'b1\
\
\'81\'aa\'83\'41\'83\'43\'83\'68\'83\'8b\'82\'aa\'82\'a9\'82\'c1\'82\'c4\'82\'c9\'82\'a9\'82\'ab\'82\'dc\'82\'b5\'82\'bd\'81\'42\
}