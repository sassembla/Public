{\rtf1\ansi\ansicpg932\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset128 HiraginoSans-W4;\f1\fnil\fcharset128 HiraginoSans-W3;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red230\green230\blue230;\red230\green230\blue230;
}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c0\c0;\csgray\c92143;\csgray\c92143;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww22800\viewh13200\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs44 \cf0 Autoya\'83\'60\'83\'46\'83\'62\'83\'4e\'83\'8a\'83\'58\'83\'67
\b0\fs24 \
\

\b \'8a\'54\'97\'76
\b0 \

\f1 	OverridePoints\'82\'cc\'82\'b1\'82\'cc\'8d\'80\'96\'da\'82\'f0\'82\'a2\'82\'a2\'8a\'b4\'82\'b6\'82\'c9\'89\'fc\'95\'cf\'82\'c5\'82\'ab\'82\'e9\'82\'c6\'97\'c7\'82\'a2\'82\'c6\'8e\'76\'82\'a4\'81\'42\'93\'c1\'82\'c9\'83\'5a\'83\'4c\'83\'85\'83\'8a\'83\'65\'83\'42\'93\'49\'82\'c8\'95\'94\'95\'aa\'82\'c5\'81\'42
\f0 \
\
\

\b\fs34 authentication handlers.\

\b0\fs24 \

\b 1.\'8f\'89\'89\'f1\'92\'ca\'90\'4d\'82\'c9\'8e\'67\'82\'a4\'83\'6f\'83\'43\'83\'69\'83\'8a\'83\'4c\'81\'5b\'81\'41\'97\'c7\'82\'a2\'8a\'b4\'82\'b6\'82\'cc\'8c\'60\'8e\'ae\'82\'cc\'82\'e0\'82\'cc\'82\'f0\'97\'c7\'82\'a2\'8a\'b4\'82\'b6\'82\'cc\cf2 \'88\'c3\'8d\'86\'89\'bb\'82\'b5\'82\'c4\cf0 \'91\'97\'82\'e9\'82\'d7\'82\'ab\'81\'42
\b0 \
\cb3 private IEnumerator OnBootAuthRequest(Action<Dictionary<string, string>, string> setHeaderAndDataToRequest)\
\{\
    // set boot body data for Http.Post to server.(if empty, this framework use Http.Get for sending data to server.)\
    var data = "some boot data";\
\
    // set boot authentication header.\
    var bootKey = AuthSettings.AUTH_BOOT;\
    var base64Str = Base64.FromBytes(bootKey);\
\
    var bootRequestHeader = new Dictionary<string, string> \{\
        \{"Authorization", base64Str\}\
    \};\
\
    setHeaderAndDataToRequest(bootRequestHeader, data);\
    yield break;\
\}\
\cb1 \
\

\b 2.\'8f\'89\'89\'f1\'8b\'4e\'93\'ae\'8e\'9e\'82\'cc\'83\'54\'81\'5b\'83\'6f\'82\'a9\'82\'e7\'82\'cc\'92\'ca\'90\'4d\'82\'c9\'91\'ce\'82\'b5\'82\'c4\'81\'41\'83\'4e\'83\'89\'83\'43\'83\'41\'83\'93\'83\'67\'91\'a4\'82\'c5\'83\'60\'83\'46\'83\'62\'83\'4e\'82\'b5\'81\'41valid\'82\'a9\'82\'c7\'82\'a4\'82\'a9\'94\'bb\'92\'66\'82\'b7\'82\'d7\'82\'ab\'81\'42valid\'82\'be\'82\'c1\'82\'bd\'82\'e7\'81\'41\cf2 \'88\'c3\'8d\'86\'89\'bb\'82\'b5\'82\'c4\cf0 token\'83\'66\'81\'5b\'83\'5e\'82\'f0\'95\'db\'91\'b6\'82\'b7\'82\'e9\'81\'42\
	\'82\'b1\'82\'cc\'97\'e1\'82\'c5\'82\'cdtoken\'82\'b5\'82\'a9\'95\'db\'91\'b6\'82\'b5\'82\'c4\'82\'a2\'82\'c8\'82\'a2\'82\'aa\'81\'41refreshToken\'82\'e0\cf2 \'88\'c3\'8d\'86\'89\'bb\'82\'b5\'82\'c4\cf0 \'95\'db\'91\'b6\'82\'b7\'82\'e9\'95\'4b\'97\'76\'82\'aa\'82\'a0\'82\'e9\'81\'42
\b0 \
\cb3 private IEnumerator OnBootAuthResponse(Dictionary<string, string> responseHeader, string data, Action<int, string> bootAuthFailed)\
\{\
    var isValidResponse = true;\
    if (isValidResponse)\
    \{\
        Autoya.Persist_Update(AuthSettings.AUTH_STORED_FRAMEWORK_DOMAIN, AuthSettings.AUTH_STORED_TOKEN_FILENAME, data);\
    \}\
    else\
    \{\
        bootAuthFailed(-1, "failed to boot validation.");\
    \}\
    yield break;\
\}\
\cb1 \
\

\b 3.\'83\'8a\'83\'74\'83\'8c\'83\'62\'83\'56\'83\'85\'83\'67\'81\'5b\'83\'4e\'83\'93\'82\'cc\'91\'97\'90\'4d\'81\'42\'95\'db\'91\'b6\'82\'b5\'82\'c4\'82\'a0\'82\'e9refreshToken\'82\'f0\'95\'9c\'8d\'86\'82\'b7\'82\'e9\'95\'4b\'97\'76\'82\'aa\'82\'a0\'82\'e9\'81\'42\'82\'b1\'82\'cc\'83\'52\'81\'5b\'83\'68\'82\'c5\'82\'cd\'82\'dc\'82\'f1\'82\'dc\'95\'db\'91\'b6\'82\'b5\'82\'c4\'82\'a8\'82\'a2\'82\'bdtoken\'82\'f0\'91\'97\'82\'c1\'82\'c4\'82\'a2\'82\'e9\'82\'bd\'82\'df\'81\'41\'95\'db\'91\'b6\'82\'b7\'82\'e9\'82\'c6\'82\'b1\'82\'eb\'82\'a9\'82\'e7\'95\'cf\'82\'a6\'82\'c8\'82\'a2\'82\'c6\'8d\'73\'82\'af\'82\'c8\'82\'a2\'81\'42
\b0 \
\cb3 private IEnumerator OnTokenRefreshRequest(Action<Dictionary<string, string>, string> setHeaderToRequest)\
\
    // set refresh body data for Http.Post to server.(if empty, this framework use Http.Get for sending data to server.)\
    var data = "some refresh data";\
\
    // return refresh token for re-authenticate.\
    var refreshToken = Autoya.Persist_Load(AuthSettings.AUTH_STORED_FRAMEWORK_DOMAIN, AuthSettings.AUTH_STORED_TOKEN_FILENAME);\
\
    var base64Str = Base64.FromString(refreshToken);\
\
    var refreshRequestHeader = new Dictionary<string, string> \{\
        \{"Authorization", base64Str\}\
    \};\
\
    setHeaderToRequest(refreshRequestHeader, data);\
    yield break;\
\}\
\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 4.\'83\'8a\'83\'74\'83\'8c\'83\'62\'83\'56\'83\'85\'83\'67\'81\'5b\'83\'4e\'83\'93\'82\'cc\'8e\'f3\'90\'4d\'81\'42validation\'82\'b5\'82\'c4OK\'82\'be\'82\'c1\'82\'bd\'82\'e7\'81\'41\'90\'56\'82\'bd\'82\'c9\'93\'be\'82\'bdtoken\'82\'c6refreshToken\'82\'f0\cf2 \'88\'c3\'8d\'86\'89\'bb\'82\'b5\'82\'c4\cf0 \'95\'db\'91\'b6\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private IEnumerator OnTokenRefreshResponse(Dictionary<string, string> responseHeader, string data, Action<int, string> refreshFailed)\
\{\
    var isValidResponse = true;\
    if (isValidResponse)\
    \{\
        Autoya.Persist_Update(AuthSettings.AUTH_STORED_FRAMEWORK_DOMAIN, AuthSettings.AUTH_STORED_TOKEN_FILENAME, data);\
    \}\
    else\
    \{\
        // failsafe here.\
\
\
        // set result as failure.\
        refreshFailed(-1, "failed to refresh token.");\
    \}\
\
    yield break;\
\}\
\cb1 \
\

\b\fs34 authorized http request & response handlers.
\b0\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 5.JWT\'82\'c8\'82\'c7\'82\'ccdigest\'90\'b6\'90\'ac\'82\'f0\'8d\'73\'82\'a4\'82\'cc\'82\'cd\'82\'b1\'82\'b1\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private Dictionary<string, string> OnHttpRequest(string method, string url, Dictionary<string, string> requestHeader, string data)\
\{\
    var accessToken = Autoya.Persist_Load(AuthSettings.AUTH_STORED_FRAMEWORK_DOMAIN, AuthSettings.AUTH_STORED_TOKEN_FILENAME);\
    requestHeader["Authorization"] = Base64.FromString(accessToken);\
\
    return requestHeader;\
\}\
\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 6.\'83\'8c\'83\'58\'83\'7c\'83\'93\'83\'58\'82\'c9\'91\'ce\'82\'b5\'82\'c4\'82\'cc\'83\'60\'83\'46\'83\'62\'83\'4e\'82\'f0\'8d\'73\'82\'a4\'82\'cc\'82\'cd\'82\'b1\'82\'b1\'81\'42(string)
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private bool OnValidateHttpResponse(string method, string url, Dictionary<string, string> responseHeader, string data, out string reason)\
\{\
    // let's validate http response if need.\
    var isValid = true;\
    if (isValid)\
    \{\
        reason = string.Empty;\
        return true;\
    \}\
    else\
    \{\
        reason = "run over by a bicycle.";\
        return false;\
    \}\
\}\
\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 7.\'83\'8c\'83\'58\'83\'7c\'83\'93\'83\'58\'82\'c9\'91\'ce\'82\'b5\'82\'c4\'82\'cc\'83\'60\'83\'46\'83\'62\'83\'4e\'82\'f0\'8d\'73\'82\'a4\'82\'cc\'82\'cd\'82\'b1\'82\'b1\'81\'42(byte[])
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private bool OnValidateHttpResponse(string method, string url, Dictionary<string, string> responseHeader, byte[] data, out string reason)\
\{\
    // let's validate http response if need.\
    var isValid = true;\
    if (isValid)\
    \{\
        reason = string.Empty;\
        return true;\
    \}\
    else\
    \{\
        reason = "run over by a bicycle.";\
        return false;\
    \}\
\}\
\cb1 \
\

\b\fs34 purchase feature handlers.
\b0\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 8.\'83\'54\'81\'5b\'83\'6f\'91\'a4\'82\'aa\'8d\'c5\'90\'56\'8f\'f3\'91\'d4\'82\'f0\'8e\'9d\'82\'c1\'82\'c4\'82\'a2\'82\'e9\'82\'cc\'82\'c5\'81\'41\'95\'4b\'97\'76\'82\'aa\'82\'a0\'82\'ea\'82\'ce\'89\'db\'8b\'e0\'8a\'d6\'98\'41\'82\'cc\'83\'70\'83\'89\'83\'81\'81\'5b\'83\'5e\'82\'f0\'8d\'58\'90\'56\'82\'b7\'82\'e9\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private void onPaidPurchaseDoneInBackground(string backgroundPurchasedProductId)\
\{\
    // server deployed some products for this player. update player's parameter if need.\
\}\
\cb1 \
\

\b\fs34 AssetBundles handlers.
\b0\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 9.\'83\'8a\'83\'58\'83\'67\'82\'f0\'95\'db\'91\'b6\'82\'b7\'82\'e9\'8d\'db\'82\'c9\cf2 \'88\'c3\'8d\'86\'89\'bb\cf0 \'82\'b7\'82\'e9\'82\'c6\'97\'c7\'82\'a2\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private AssetBundleList[] LoadAssetBundleListsFromStorage()\
\{\
    // load stored assetBundleList then return it.\
    var filePaths = Autoya.Persist_FileNamesInDomain(AssetBundlesSettings.ASSETBUNDLES_LIST_STORED_DOMAIN);\
    return filePaths.Select(\
        path => JsonUtility.FromJson<AssetBundleList>(\
            Autoya.Persist_Load(\
                AssetBundlesSettings.ASSETBUNDLES_LIST_STORED_DOMAIN, Path.GetFileName(path)\
            )\
        )\
    ).ToArray();\
\}\
\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 10.\'83\'8a\'83\'58\'83\'67\'82\'f0\'8d\'58\'90\'56\'82\'b7\'82\'e9\'8d\'db\'81\'41\cf2 \'88\'c3\'8d\'86\'89\'bb\cf0 \'82\'b7\'82\'e9\'82\'c6\'97\'c7\'82\'a2\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private bool StoreAssetBundleListToStorage(AssetBundleList list)\
\{\
    var listStr = JsonUtility.ToJson(list);\
    var result = _autoyaFilePersistence.Update(AssetBundlesSettings.ASSETBUNDLES_LIST_STORED_DOMAIN, list.identity, listStr);\
    return result;\
\}\
\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 11.AssetBundleList\'82\'ccGet\'8e\'9e\'82\'c9\'94\'ad\'8c\'f8\'81\'42CDN\'82\'c9\'89\'bd\'82\'a9\'82\'b5\'82\'e7\'83\'41\'83\'4e\'83\'5a\'83\'58\'95\'db\'8c\'ec\'82\'f0\'8e\'64\'8d\'9e\'82\'f1\'82\'c5\'82\'a0\'82\'e9\'8f\'ea\'8d\'87\'81\'41\'82\'b1\'82\'b1\'82\'c5\'83\'70\'83\'89\'83\'81\'81\'5b\'83\'5e\'82\'f0\'93\'fc\'82\'ea\'82\'e9\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private Dictionary<string, string> OnAssetBundleListGetRequest(string url, Dictionary<string, string> requestHeader)\
\{\
    return requestHeader;\
\}\
\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 12.PreloadList\'82\'ccGet\'8e\'9e\'82\'c9\'94\'ad\'8c\'f8\'81\'42CDN\'82\'c9\'89\'bd\'82\'a9\'82\'b5\'82\'e7\'83\'41\'83\'4e\'83\'5a\'83\'58\'95\'db\'8c\'ec\'82\'f0\'8e\'64\'8d\'9e\'82\'f1\'82\'c5\'82\'a0\'82\'e9\'8f\'ea\'8d\'87\'81\'41\'82\'b1\'82\'b1\'82\'c5\'83\'70\'83\'89\'83\'81\'81\'5b\'83\'5e\'82\'f0\'93\'fc\'82\'ea\'82\'e9\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private Dictionary<string, string> OnAssetBundlePreloadListGetRequest(string url, Dictionary<string, string> requestHeader)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 \cb4 	
\b0 \cb3 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \{\
    return requestHeader;\
\}\
\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 13.AssetBundle\'82\'ccGet\'8e\'9e\'82\'c9\'94\'ad\'8c\'f8\'81\'42CDN\'82\'c9\'89\'bd\'82\'a9\'82\'b5\'82\'e7\'83\'41\'83\'4e\'83\'5a\'83\'58\'95\'db\'8c\'ec\'82\'f0\'8e\'64\'8d\'9e\'82\'f1\'82\'c5\'82\'a0\'82\'e9\'8f\'ea\'8d\'87\'81\'41\'82\'b1\'82\'b1\'82\'c5\'83\'70\'83\'89\'83\'81\'81\'5b\'83\'5e\'82\'f0\'93\'fc\'82\'ea\'82\'e9\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private Dictionary<string, string> OnAssetBundleGetRequest(string url, Dictionary<string, string> requestHeader)\
\{\
    return requestHeader;\
\}\
\cb1 \
\

\b\fs34 ApplicationManifest handlers.
\b0\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 14.RuntimeManifest\'82\'cc\'8f\'e3\'8f\'91\'82\'ab\'81\'42\cf2 \'88\'c3\'8d\'86\'89\'bb\cf0 \'82\'b7\'82\'e9\'82\'c6\'97\'c7\'82\'a2\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private bool OnOverwriteRuntimeManifest(string data)\
\{\
    return _autoyaFilePersistence.Update(AppSettings.APP_STORED_RUNTIME_MANIFEST_DOMAIN, AppSettings.APP_STORED_RUNTIME_MANIFEST_FILENAME, data);\
\}\
\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 15.RuntimeManifest\'82\'cc\'8e\'e6\'82\'e8\'8f\'6f\'82\'b5\'81\'42\cf2 \'95\'9c\'8d\'86\'89\'bb\cf0 \'82\'b7\'82\'e9\'82\'c6\'97\'c7\'82\'a2\'81\'42
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb3 private string OnLoadRuntimeManifest()\
\{\
    return _autoyaFilePersistence.Load(AppSettings.APP_STORED_RUNTIME_MANIFEST_DOMAIN, AppSettings.APP_STORED_RUNTIME_MANIFEST_FILENAME);\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \cb1 \
}